package jp.co.ha.db.entity;

import java.io.Serializable;

import jp.co.ha.common.log.annotation.Ignore;

/**
 * 管理者サイトユーザメモ情報Key
 *
 * @version 1.0.0
 */
public class RootUserNoteInfoKey implements Serializable {

    /**
     *
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database column root_user_note_info.SEQ_ROOT_USER_NOTE_INFO_ID
     *
     * @mbg.generated Sun Apr 11 15:45:11 GMT+09:00 2021
     */
    private Long seqRootUserNoteInfoId;

    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table root_user_note_info
     *
     * @mbg.generated Sun Apr 11 15:45:11 GMT+09:00 2021
     */
    @Ignore
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator. This method returns the
     * value of the database column
     * root_user_note_info.SEQ_ROOT_USER_NOTE_INFO_ID
     *
     * @return the value of root_user_note_info.SEQ_ROOT_USER_NOTE_INFO_ID
     *
     * @mbg.generated Sun Apr 11 15:45:11 GMT+09:00 2021
     */
    public Long getSeqRootUserNoteInfoId() {
        return seqRootUserNoteInfoId;
    }

    /**
     * This method was generated by MyBatis Generator. This method sets the
     * value of the database column
     * root_user_note_info.SEQ_ROOT_USER_NOTE_INFO_ID
     *
     * @param seqRootUserNoteInfoId
     *     the value for root_user_note_info.SEQ_ROOT_USER_NOTE_INFO_ID
     *
     * @mbg.generated Sun Apr 11 15:45:11 GMT+09:00 2021
     */
    public void setSeqRootUserNoteInfoId(Long seqRootUserNoteInfoId) {
        this.seqRootUserNoteInfoId = seqRootUserNoteInfoId;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table root_user_note_info
     *
     * @mbg.generated Sun Apr 11 15:45:11 GMT+09:00 2021
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", seqRootUserNoteInfoId=").append(seqRootUserNoteInfoId);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table root_user_note_info
     *
     * @mbg.generated Sun Apr 11 15:45:11 GMT+09:00 2021
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        RootUserNoteInfoKey other = (RootUserNoteInfoKey) that;
        return (this.getSeqRootUserNoteInfoId() == null
                ? other.getSeqRootUserNoteInfoId() == null
                : this.getSeqRootUserNoteInfoId()
                        .equals(other.getSeqRootUserNoteInfoId()));
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table root_user_note_info
     *
     * @mbg.generated Sun Apr 11 15:45:11 GMT+09:00 2021
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getSeqRootUserNoteInfoId() == null) ? 0
                : getSeqRootUserNoteInfoId().hashCode());
        return result;
    }
}