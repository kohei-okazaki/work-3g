package jp.co.ha.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

/**
 * アカウント情報Example
 * 
 * @since 1.0
 */
public class AccountExample {

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public AccountExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("USER_ID =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("USER_ID <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("USER_ID >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("USER_ID >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("USER_ID <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("USER_ID <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("USER_ID like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("USER_ID not like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<String> values) {
			addCriterion("USER_ID in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<String> values) {
			addCriterion("USER_ID not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("PASSWORD is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("PASSWORD is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("PASSWORD =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("PASSWORD <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("PASSWORD >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("PASSWORD >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("PASSWORD <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("PASSWORD <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("PASSWORD like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("PASSWORD not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("PASSWORD in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("PASSWORD not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("PASSWORD between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("PASSWORD not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagIsNull() {
			addCriterion("DELETE_FLAG is null");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagIsNotNull() {
			addCriterion("DELETE_FLAG is not null");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagEqualTo(String value) {
			addCriterion("DELETE_FLAG =", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagNotEqualTo(String value) {
			addCriterion("DELETE_FLAG <>", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagGreaterThan(String value) {
			addCriterion("DELETE_FLAG >", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagGreaterThanOrEqualTo(String value) {
			addCriterion("DELETE_FLAG >=", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagLessThan(String value) {
			addCriterion("DELETE_FLAG <", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagLessThanOrEqualTo(String value) {
			addCriterion("DELETE_FLAG <=", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagLike(String value) {
			addCriterion("DELETE_FLAG like", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagNotLike(String value) {
			addCriterion("DELETE_FLAG not like", value, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagIn(List<String> values) {
			addCriterion("DELETE_FLAG in", values, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagNotIn(List<String> values) {
			addCriterion("DELETE_FLAG not in", values, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagBetween(String value1, String value2) {
			addCriterion("DELETE_FLAG between", value1, value2, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andDeleteFlagNotBetween(String value1, String value2) {
			addCriterion("DELETE_FLAG not between", value1, value2, "deleteFlag");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireIsNull() {
			addCriterion("PASSWORD_EXPIRE is null");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireIsNotNull() {
			addCriterion("PASSWORD_EXPIRE is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireEqualTo(Date value) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE =", value, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireNotEqualTo(Date value) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE <>", value, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireGreaterThan(Date value) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE >", value, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE >=", value, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireLessThan(Date value) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE <", value, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE <=", value, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireIn(List<Date> values) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE in", values, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireNotIn(List<Date> values) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE not in", values, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE between", value1, value2, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andPasswordExpireNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("PASSWORD_EXPIRE not between", value1, value2, "passwordExpire");
			return (Criteria) this;
		}

		public Criteria andRemarksIsNull() {
			addCriterion("REMARKS is null");
			return (Criteria) this;
		}

		public Criteria andRemarksIsNotNull() {
			addCriterion("REMARKS is not null");
			return (Criteria) this;
		}

		public Criteria andRemarksEqualTo(String value) {
			addCriterion("REMARKS =", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksNotEqualTo(String value) {
			addCriterion("REMARKS <>", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksGreaterThan(String value) {
			addCriterion("REMARKS >", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksGreaterThanOrEqualTo(String value) {
			addCriterion("REMARKS >=", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksLessThan(String value) {
			addCriterion("REMARKS <", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksLessThanOrEqualTo(String value) {
			addCriterion("REMARKS <=", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksLike(String value) {
			addCriterion("REMARKS like", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksNotLike(String value) {
			addCriterion("REMARKS not like", value, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksIn(List<String> values) {
			addCriterion("REMARKS in", values, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksNotIn(List<String> values) {
			addCriterion("REMARKS not in", values, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksBetween(String value1, String value2) {
			addCriterion("REMARKS between", value1, value2, "remarks");
			return (Criteria) this;
		}

		public Criteria andRemarksNotBetween(String value1, String value2) {
			addCriterion("REMARKS not between", value1, value2, "remarks");
			return (Criteria) this;
		}

		public Criteria andApiKeyIsNull() {
			addCriterion("API_KEY is null");
			return (Criteria) this;
		}

		public Criteria andApiKeyIsNotNull() {
			addCriterion("API_KEY is not null");
			return (Criteria) this;
		}

		public Criteria andApiKeyEqualTo(String value) {
			addCriterion("API_KEY =", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyNotEqualTo(String value) {
			addCriterion("API_KEY <>", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyGreaterThan(String value) {
			addCriterion("API_KEY >", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyGreaterThanOrEqualTo(String value) {
			addCriterion("API_KEY >=", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyLessThan(String value) {
			addCriterion("API_KEY <", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyLessThanOrEqualTo(String value) {
			addCriterion("API_KEY <=", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyLike(String value) {
			addCriterion("API_KEY like", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyNotLike(String value) {
			addCriterion("API_KEY not like", value, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyIn(List<String> values) {
			addCriterion("API_KEY in", values, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyNotIn(List<String> values) {
			addCriterion("API_KEY not in", values, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyBetween(String value1, String value2) {
			addCriterion("API_KEY between", value1, value2, "apiKey");
			return (Criteria) this;
		}

		public Criteria andApiKeyNotBetween(String value1, String value2) {
			addCriterion("API_KEY not between", value1, value2, "apiKey");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNull() {
			addCriterion("UPDATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNotNull() {
			addCriterion("UPDATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateEqualTo(Date value) {
			addCriterion("UPDATE_DATE =", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotEqualTo(Date value) {
			addCriterion("UPDATE_DATE <>", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThan(Date value) {
			addCriterion("UPDATE_DATE >", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DATE >=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThan(Date value) {
			addCriterion("UPDATE_DATE <", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DATE <=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIn(List<Date> values) {
			addCriterion("UPDATE_DATE in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotIn(List<Date> values) {
			addCriterion("UPDATE_DATE not in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DATE between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DATE not between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNull() {
			addCriterion("REG_DATE is null");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNotNull() {
			addCriterion("REG_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andRegDateEqualTo(Date value) {
			addCriterion("REG_DATE =", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotEqualTo(Date value) {
			addCriterion("REG_DATE <>", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThan(Date value) {
			addCriterion("REG_DATE >", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThanOrEqualTo(Date value) {
			addCriterion("REG_DATE >=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThan(Date value) {
			addCriterion("REG_DATE <", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThanOrEqualTo(Date value) {
			addCriterion("REG_DATE <=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateIn(List<Date> values) {
			addCriterion("REG_DATE in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotIn(List<Date> values) {
			addCriterion("REG_DATE not in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateBetween(Date value1, Date value2) {
			addCriterion("REG_DATE between", value1, value2, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotBetween(Date value1, Date value2) {
			addCriterion("REG_DATE not between", value1, value2, "regDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table account
	 *
	 * @mbg.generated Fri Oct 25 23:00:55 GMT+09:00 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table account
	 *
	 * @mbg.generated do_not_delete_during_merge Mon Oct 22 19:05:30 JST 2018
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}
}