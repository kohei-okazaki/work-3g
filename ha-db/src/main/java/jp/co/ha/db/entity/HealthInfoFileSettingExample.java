package jp.co.ha.db.entity;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * 健康情報ファイル設定情報Example
 *
 * @version 1.0.0
 */
public class HealthInfoFileSettingExample extends BaseExample {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to
     * the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public HealthInfoFileSettingExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds
     * to the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2,
                String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException(
                        "Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSeqUserIdIsNull() {
            addCriterion("SEQ_USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdIsNotNull() {
            addCriterion("SEQ_USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdEqualTo(Long value) {
            addCriterion("SEQ_USER_ID =", value, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdNotEqualTo(Long value) {
            addCriterion("SEQ_USER_ID <>", value, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdGreaterThan(Long value) {
            addCriterion("SEQ_USER_ID >", value, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SEQ_USER_ID >=", value, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdLessThan(Long value) {
            addCriterion("SEQ_USER_ID <", value, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdLessThanOrEqualTo(Long value) {
            addCriterion("SEQ_USER_ID <=", value, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdIn(List<Long> values) {
            addCriterion("SEQ_USER_ID in", values, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdNotIn(List<Long> values) {
            addCriterion("SEQ_USER_ID not in", values, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdBetween(Long value1, Long value2) {
            addCriterion("SEQ_USER_ID between", value1, value2, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andSeqUserIdNotBetween(Long value1, Long value2) {
            addCriterion("SEQ_USER_ID not between", value1, value2, "seqUserId");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagIsNull() {
            addCriterion("HEADER_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagIsNotNull() {
            addCriterion("HEADER_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagEqualTo(Boolean value) {
            addCriterion("HEADER_FLAG =", value, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagNotEqualTo(Boolean value) {
            addCriterion("HEADER_FLAG <>", value, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagGreaterThan(Boolean value) {
            addCriterion("HEADER_FLAG >", value, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("HEADER_FLAG >=", value, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagLessThan(Boolean value) {
            addCriterion("HEADER_FLAG <", value, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("HEADER_FLAG <=", value, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagIn(List<Boolean> values) {
            addCriterion("HEADER_FLAG in", values, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagNotIn(List<Boolean> values) {
            addCriterion("HEADER_FLAG not in", values, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("HEADER_FLAG between", value1, value2, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andHeaderFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("HEADER_FLAG not between", value1, value2, "headerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagIsNull() {
            addCriterion("FOOTER_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andFooterFlagIsNotNull() {
            addCriterion("FOOTER_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andFooterFlagEqualTo(Boolean value) {
            addCriterion("FOOTER_FLAG =", value, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagNotEqualTo(Boolean value) {
            addCriterion("FOOTER_FLAG <>", value, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagGreaterThan(Boolean value) {
            addCriterion("FOOTER_FLAG >", value, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("FOOTER_FLAG >=", value, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagLessThan(Boolean value) {
            addCriterion("FOOTER_FLAG <", value, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("FOOTER_FLAG <=", value, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagIn(List<Boolean> values) {
            addCriterion("FOOTER_FLAG in", values, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagNotIn(List<Boolean> values) {
            addCriterion("FOOTER_FLAG not in", values, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("FOOTER_FLAG between", value1, value2, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andFooterFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("FOOTER_FLAG not between", value1, value2, "footerFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagIsNull() {
            addCriterion("MASK_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andMaskFlagIsNotNull() {
            addCriterion("MASK_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andMaskFlagEqualTo(Boolean value) {
            addCriterion("MASK_FLAG =", value, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagNotEqualTo(Boolean value) {
            addCriterion("MASK_FLAG <>", value, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagGreaterThan(Boolean value) {
            addCriterion("MASK_FLAG >", value, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("MASK_FLAG >=", value, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagLessThan(Boolean value) {
            addCriterion("MASK_FLAG <", value, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("MASK_FLAG <=", value, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagIn(List<Boolean> values) {
            addCriterion("MASK_FLAG in", values, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagNotIn(List<Boolean> values) {
            addCriterion("MASK_FLAG not in", values, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("MASK_FLAG between", value1, value2, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andMaskFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("MASK_FLAG not between", value1, value2, "maskFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagIsNull() {
            addCriterion("ENCLOSURE_CHAR_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagIsNotNull() {
            addCriterion("ENCLOSURE_CHAR_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagEqualTo(Boolean value) {
            addCriterion("ENCLOSURE_CHAR_FLAG =", value, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagNotEqualTo(Boolean value) {
            addCriterion("ENCLOSURE_CHAR_FLAG <>", value, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagGreaterThan(Boolean value) {
            addCriterion("ENCLOSURE_CHAR_FLAG >", value, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("ENCLOSURE_CHAR_FLAG >=", value, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagLessThan(Boolean value) {
            addCriterion("ENCLOSURE_CHAR_FLAG <", value, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("ENCLOSURE_CHAR_FLAG <=", value, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagIn(List<Boolean> values) {
            addCriterion("ENCLOSURE_CHAR_FLAG in", values, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagNotIn(List<Boolean> values) {
            addCriterion("ENCLOSURE_CHAR_FLAG not in", values, "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("ENCLOSURE_CHAR_FLAG between", value1, value2,
                    "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andEnclosureCharFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("ENCLOSURE_CHAR_FLAG not between", value1, value2,
                    "enclosureCharFlag");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_DATE =", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_DATE <>", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThan(LocalDateTime value) {
            addCriterion("UPDATE_DATE >", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_DATE >=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThan(LocalDateTime value) {
            addCriterion("UPDATE_DATE <", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("UPDATE_DATE <=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIn(List<LocalDateTime> values) {
            addCriterion("UPDATE_DATE in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotIn(List<LocalDateTime> values) {
            addCriterion("UPDATE_DATE not in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("UPDATE_DATE between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotBetween(LocalDateTime value1,
                LocalDateTime value2) {
            addCriterion("UPDATE_DATE not between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andRegDateIsNull() {
            addCriterion("REG_DATE is null");
            return (Criteria) this;
        }

        public Criteria andRegDateIsNotNull() {
            addCriterion("REG_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andRegDateEqualTo(LocalDateTime value) {
            addCriterion("REG_DATE =", value, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateNotEqualTo(LocalDateTime value) {
            addCriterion("REG_DATE <>", value, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateGreaterThan(LocalDateTime value) {
            addCriterion("REG_DATE >", value, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("REG_DATE >=", value, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateLessThan(LocalDateTime value) {
            addCriterion("REG_DATE <", value, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("REG_DATE <=", value, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateIn(List<LocalDateTime> values) {
            addCriterion("REG_DATE in", values, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateNotIn(List<LocalDateTime> values) {
            addCriterion("REG_DATE not in", values, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("REG_DATE between", value1, value2, "regDate");
            return (Criteria) this;
        }

        public Criteria andRegDateNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("REG_DATE not between", value1, value2, "regDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table health_info_file_setting
     * 
     * @mbg.generated Sun Dec 15 12:08:12 GMT+09:00 2024
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue,
                String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to
     * the database table health_info_file_setting
     *
     * @mbg.generated do_not_delete_during_merge Mon Oct 22 19:05:30 JST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}