package jp.co.ha.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MailInfoExample {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public MailInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("USER_ID =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("USER_ID <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("USER_ID >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("USER_ID >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("USER_ID <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("USER_ID <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("USER_ID like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("USER_ID not like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<String> values) {
			addCriterion("USER_ID in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<String> values) {
			addCriterion("USER_ID not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andMailAddressIsNull() {
			addCriterion("MAIL_ADDRESS is null");
			return (Criteria) this;
		}

		public Criteria andMailAddressIsNotNull() {
			addCriterion("MAIL_ADDRESS is not null");
			return (Criteria) this;
		}

		public Criteria andMailAddressEqualTo(String value) {
			addCriterion("MAIL_ADDRESS =", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressNotEqualTo(String value) {
			addCriterion("MAIL_ADDRESS <>", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressGreaterThan(String value) {
			addCriterion("MAIL_ADDRESS >", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressGreaterThanOrEqualTo(String value) {
			addCriterion("MAIL_ADDRESS >=", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressLessThan(String value) {
			addCriterion("MAIL_ADDRESS <", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressLessThanOrEqualTo(String value) {
			addCriterion("MAIL_ADDRESS <=", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressLike(String value) {
			addCriterion("MAIL_ADDRESS like", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressNotLike(String value) {
			addCriterion("MAIL_ADDRESS not like", value, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressIn(List<String> values) {
			addCriterion("MAIL_ADDRESS in", values, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressNotIn(List<String> values) {
			addCriterion("MAIL_ADDRESS not in", values, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressBetween(String value1, String value2) {
			addCriterion("MAIL_ADDRESS between", value1, value2, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailAddressNotBetween(String value1, String value2) {
			addCriterion("MAIL_ADDRESS not between", value1, value2, "mailAddress");
			return (Criteria) this;
		}

		public Criteria andMailPasswordIsNull() {
			addCriterion("MAIL_PASSWORD is null");
			return (Criteria) this;
		}

		public Criteria andMailPasswordIsNotNull() {
			addCriterion("MAIL_PASSWORD is not null");
			return (Criteria) this;
		}

		public Criteria andMailPasswordEqualTo(String value) {
			addCriterion("MAIL_PASSWORD =", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordNotEqualTo(String value) {
			addCriterion("MAIL_PASSWORD <>", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordGreaterThan(String value) {
			addCriterion("MAIL_PASSWORD >", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("MAIL_PASSWORD >=", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordLessThan(String value) {
			addCriterion("MAIL_PASSWORD <", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordLessThanOrEqualTo(String value) {
			addCriterion("MAIL_PASSWORD <=", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordLike(String value) {
			addCriterion("MAIL_PASSWORD like", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordNotLike(String value) {
			addCriterion("MAIL_PASSWORD not like", value, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordIn(List<String> values) {
			addCriterion("MAIL_PASSWORD in", values, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordNotIn(List<String> values) {
			addCriterion("MAIL_PASSWORD not in", values, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordBetween(String value1, String value2) {
			addCriterion("MAIL_PASSWORD between", value1, value2, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andMailPasswordNotBetween(String value1, String value2) {
			addCriterion("MAIL_PASSWORD not between", value1, value2, "mailPassword");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNull() {
			addCriterion("UPDATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNotNull() {
			addCriterion("UPDATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateEqualTo(Date value) {
			addCriterion("UPDATE_DATE =", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotEqualTo(Date value) {
			addCriterion("UPDATE_DATE <>", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThan(Date value) {
			addCriterion("UPDATE_DATE >", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DATE >=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThan(Date value) {
			addCriterion("UPDATE_DATE <", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DATE <=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIn(List<Date> values) {
			addCriterion("UPDATE_DATE in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotIn(List<Date> values) {
			addCriterion("UPDATE_DATE not in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DATE between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DATE not between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNull() {
			addCriterion("REG_DATE is null");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNotNull() {
			addCriterion("REG_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andRegDateEqualTo(Date value) {
			addCriterion("REG_DATE =", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotEqualTo(Date value) {
			addCriterion("REG_DATE <>", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThan(Date value) {
			addCriterion("REG_DATE >", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThanOrEqualTo(Date value) {
			addCriterion("REG_DATE >=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThan(Date value) {
			addCriterion("REG_DATE <", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThanOrEqualTo(Date value) {
			addCriterion("REG_DATE <=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateIn(List<Date> values) {
			addCriterion("REG_DATE in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotIn(List<Date> values) {
			addCriterion("REG_DATE not in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateBetween(Date value1, Date value2) {
			addCriterion("REG_DATE between", value1, value2, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotBetween(Date value1, Date value2) {
			addCriterion("REG_DATE not between", value1, value2, "regDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table mail_info
	 *
	 * @mbg.generated Sun Nov 04 17:02:28 JST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table mail_info
	 *
	 * @mbg.generated do_not_delete_during_merge Mon Oct 22 19:05:30 JST 2018
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}
}