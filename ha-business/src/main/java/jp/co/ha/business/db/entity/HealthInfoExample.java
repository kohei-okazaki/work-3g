package jp.co.ha.business.db.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HealthInfoExample {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public HealthInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andHealthInfoIdIsNull() {
			addCriterion("HEALTH_INFO_ID is null");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdIsNotNull() {
			addCriterion("HEALTH_INFO_ID is not null");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdEqualTo(Integer value) {
			addCriterion("HEALTH_INFO_ID =", value, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdNotEqualTo(Integer value) {
			addCriterion("HEALTH_INFO_ID <>", value, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdGreaterThan(Integer value) {
			addCriterion("HEALTH_INFO_ID >", value, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("HEALTH_INFO_ID >=", value, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdLessThan(Integer value) {
			addCriterion("HEALTH_INFO_ID <", value, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdLessThanOrEqualTo(Integer value) {
			addCriterion("HEALTH_INFO_ID <=", value, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdIn(List<Integer> values) {
			addCriterion("HEALTH_INFO_ID in", values, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdNotIn(List<Integer> values) {
			addCriterion("HEALTH_INFO_ID not in", values, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdBetween(Integer value1, Integer value2) {
			addCriterion("HEALTH_INFO_ID between", value1, value2, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andHealthInfoIdNotBetween(Integer value1, Integer value2) {
			addCriterion("HEALTH_INFO_ID not between", value1, value2, "healthInfoId");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("USER_ID is null");
			return (Criteria) this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("USER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andUserIdEqualTo(String value) {
			addCriterion("USER_ID =", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotEqualTo(String value) {
			addCriterion("USER_ID <>", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThan(String value) {
			addCriterion("USER_ID >", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(String value) {
			addCriterion("USER_ID >=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThan(String value) {
			addCriterion("USER_ID <", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLessThanOrEqualTo(String value) {
			addCriterion("USER_ID <=", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdLike(String value) {
			addCriterion("USER_ID like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotLike(String value) {
			addCriterion("USER_ID not like", value, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdIn(List<String> values) {
			addCriterion("USER_ID in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotIn(List<String> values) {
			addCriterion("USER_ID not in", values, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdBetween(String value1, String value2) {
			addCriterion("USER_ID between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andUserIdNotBetween(String value1, String value2) {
			addCriterion("USER_ID not between", value1, value2, "userId");
			return (Criteria) this;
		}

		public Criteria andHeightIsNull() {
			addCriterion("HEIGHT is null");
			return (Criteria) this;
		}

		public Criteria andHeightIsNotNull() {
			addCriterion("HEIGHT is not null");
			return (Criteria) this;
		}

		public Criteria andHeightEqualTo(BigDecimal value) {
			addCriterion("HEIGHT =", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightNotEqualTo(BigDecimal value) {
			addCriterion("HEIGHT <>", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightGreaterThan(BigDecimal value) {
			addCriterion("HEIGHT >", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("HEIGHT >=", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightLessThan(BigDecimal value) {
			addCriterion("HEIGHT <", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightLessThanOrEqualTo(BigDecimal value) {
			addCriterion("HEIGHT <=", value, "height");
			return (Criteria) this;
		}

		public Criteria andHeightIn(List<BigDecimal> values) {
			addCriterion("HEIGHT in", values, "height");
			return (Criteria) this;
		}

		public Criteria andHeightNotIn(List<BigDecimal> values) {
			addCriterion("HEIGHT not in", values, "height");
			return (Criteria) this;
		}

		public Criteria andHeightBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("HEIGHT between", value1, value2, "height");
			return (Criteria) this;
		}

		public Criteria andHeightNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("HEIGHT not between", value1, value2, "height");
			return (Criteria) this;
		}

		public Criteria andWeightIsNull() {
			addCriterion("WEIGHT is null");
			return (Criteria) this;
		}

		public Criteria andWeightIsNotNull() {
			addCriterion("WEIGHT is not null");
			return (Criteria) this;
		}

		public Criteria andWeightEqualTo(BigDecimal value) {
			addCriterion("WEIGHT =", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotEqualTo(BigDecimal value) {
			addCriterion("WEIGHT <>", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightGreaterThan(BigDecimal value) {
			addCriterion("WEIGHT >", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("WEIGHT >=", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightLessThan(BigDecimal value) {
			addCriterion("WEIGHT <", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightLessThanOrEqualTo(BigDecimal value) {
			addCriterion("WEIGHT <=", value, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightIn(List<BigDecimal> values) {
			addCriterion("WEIGHT in", values, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotIn(List<BigDecimal> values) {
			addCriterion("WEIGHT not in", values, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("WEIGHT between", value1, value2, "weight");
			return (Criteria) this;
		}

		public Criteria andWeightNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("WEIGHT not between", value1, value2, "weight");
			return (Criteria) this;
		}

		public Criteria andBmiIsNull() {
			addCriterion("BMI is null");
			return (Criteria) this;
		}

		public Criteria andBmiIsNotNull() {
			addCriterion("BMI is not null");
			return (Criteria) this;
		}

		public Criteria andBmiEqualTo(BigDecimal value) {
			addCriterion("BMI =", value, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiNotEqualTo(BigDecimal value) {
			addCriterion("BMI <>", value, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiGreaterThan(BigDecimal value) {
			addCriterion("BMI >", value, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("BMI >=", value, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiLessThan(BigDecimal value) {
			addCriterion("BMI <", value, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiLessThanOrEqualTo(BigDecimal value) {
			addCriterion("BMI <=", value, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiIn(List<BigDecimal> values) {
			addCriterion("BMI in", values, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiNotIn(List<BigDecimal> values) {
			addCriterion("BMI not in", values, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("BMI between", value1, value2, "bmi");
			return (Criteria) this;
		}

		public Criteria andBmiNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("BMI not between", value1, value2, "bmi");
			return (Criteria) this;
		}

		public Criteria andStandardWeightIsNull() {
			addCriterion("STANDARD_WEIGHT is null");
			return (Criteria) this;
		}

		public Criteria andStandardWeightIsNotNull() {
			addCriterion("STANDARD_WEIGHT is not null");
			return (Criteria) this;
		}

		public Criteria andStandardWeightEqualTo(BigDecimal value) {
			addCriterion("STANDARD_WEIGHT =", value, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightNotEqualTo(BigDecimal value) {
			addCriterion("STANDARD_WEIGHT <>", value, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightGreaterThan(BigDecimal value) {
			addCriterion("STANDARD_WEIGHT >", value, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("STANDARD_WEIGHT >=", value, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightLessThan(BigDecimal value) {
			addCriterion("STANDARD_WEIGHT <", value, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightLessThanOrEqualTo(BigDecimal value) {
			addCriterion("STANDARD_WEIGHT <=", value, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightIn(List<BigDecimal> values) {
			addCriterion("STANDARD_WEIGHT in", values, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightNotIn(List<BigDecimal> values) {
			addCriterion("STANDARD_WEIGHT not in", values, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("STANDARD_WEIGHT between", value1, value2, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andStandardWeightNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("STANDARD_WEIGHT not between", value1, value2, "standardWeight");
			return (Criteria) this;
		}

		public Criteria andUserStatusIsNull() {
			addCriterion("USER_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andUserStatusIsNotNull() {
			addCriterion("USER_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andUserStatusEqualTo(String value) {
			addCriterion("USER_STATUS =", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusNotEqualTo(String value) {
			addCriterion("USER_STATUS <>", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusGreaterThan(String value) {
			addCriterion("USER_STATUS >", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusGreaterThanOrEqualTo(String value) {
			addCriterion("USER_STATUS >=", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusLessThan(String value) {
			addCriterion("USER_STATUS <", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusLessThanOrEqualTo(String value) {
			addCriterion("USER_STATUS <=", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusLike(String value) {
			addCriterion("USER_STATUS like", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusNotLike(String value) {
			addCriterion("USER_STATUS not like", value, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusIn(List<String> values) {
			addCriterion("USER_STATUS in", values, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusNotIn(List<String> values) {
			addCriterion("USER_STATUS not in", values, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusBetween(String value1, String value2) {
			addCriterion("USER_STATUS between", value1, value2, "userStatus");
			return (Criteria) this;
		}

		public Criteria andUserStatusNotBetween(String value1, String value2) {
			addCriterion("USER_STATUS not between", value1, value2, "userStatus");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNull() {
			addCriterion("REG_DATE is null");
			return (Criteria) this;
		}

		public Criteria andRegDateIsNotNull() {
			addCriterion("REG_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andRegDateEqualTo(Date value) {
			addCriterion("REG_DATE =", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotEqualTo(Date value) {
			addCriterion("REG_DATE <>", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThan(Date value) {
			addCriterion("REG_DATE >", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateGreaterThanOrEqualTo(Date value) {
			addCriterion("REG_DATE >=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThan(Date value) {
			addCriterion("REG_DATE <", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateLessThanOrEqualTo(Date value) {
			addCriterion("REG_DATE <=", value, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateIn(List<Date> values) {
			addCriterion("REG_DATE in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotIn(List<Date> values) {
			addCriterion("REG_DATE not in", values, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateBetween(Date value1, Date value2) {
			addCriterion("REG_DATE between", value1, value2, "regDate");
			return (Criteria) this;
		}

		public Criteria andRegDateNotBetween(Date value1, Date value2) {
			addCriterion("REG_DATE not between", value1, value2, "regDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table health_info
	 *
	 * @mbg.generated do_not_delete_during_merge Sun Sep 09 15:50:12 JST 2018
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table health_info
	 *
	 * @mbg.generated Sun Sep 09 15:50:12 JST 2018
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}